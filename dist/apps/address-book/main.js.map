{"version":3,"sources":["./libs/address-book-lib/src/index.ts","./apps/address-book/src/app/app.component.ts","./apps/address-book/src/app/app.component.html","./libs/address-book-lib/src/lib/address-book-service/addresss-book.service.adapter.ts","./apps/address-book/src/main.ts","./apps/address-book/src/app/app.module.ts","./libs/address-book-lib/src/lib/address-book-service/address-book.service.ts","./libs/address-book-lib/src/lib/address-book-lib.module.ts","./libs/address-book-lib/src/lib/address-book-service/adapters/random-user.adapter.ts","./apps/address-book/src/environments/environment.ts","./libs/address-book-lib/src/lib/address-book-detail/address-book-detail.component.ts","./libs/address-book-lib/src/lib/address-book-detail/address-book-detail.component.html","./libs/address-book-lib/src/lib/address-book-list/address-book-list.component.ts","./libs/address-book-lib/src/lib/address-book-list/address-book-list.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA8C;;;;;;;;;;;;;;;;;;;ACOvC,MAAM,YAAY;IACvB;QACA,UAAK,GAAG,cAAc,CAAC;IADR,CAAC;;wEADL,YAAY;4FAAZ,YAAY;QCPzB,4EAA2C;QACzC,qEAAI;QAAA,uDAAuB;QAAA,4DAAK;QAClC,4DAAS;QAET,uEAAM;QACJ,2EAA+B;QACjC,4DAAO;;QANc,8EAAqB;QACpC,0DAAuB;QAAvB,+FAAuB;;;;;;;;;;;;;;ACC7B;AAAA;AAAA;AAAA;AAA+C;AAExC,MAAe,yBAAyB;CAI9C;AAEM,MAAM,8BAA8B,GAAG,IAAI,4DAAc,CAC9D,6BAA6B,CAC9B,CAAC;;;;;;;;;;;;;;;;;;;ACZ6C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB;KACrB,eAAe,CAAC,yDAAS,CAAC;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACXtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACX;AAEA;AACgB;AACgB;AACrB;;;;AAgBnD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YATJ;YACP,uEAAa;YACb,4EAAoB,CAAC,OAAO,CAAC;gBAC3B,kBAAkB,EAAE,qEAAW,CAAC,gBAAgB;gBAChD,iBAAiB,EAAE,qEAAW,CAAC,iBAAiB;aACjD,CAAC;YACF,4FAAuB;YACvB,4DAAY,CAAC,OAAO,CAAC,EAAE,CAAC;SACzB;mIAIU,SAAS,mBAbL,2DAAY,aAEzB,uEAAa,+GAKb,4FAAuB;;;;;;;;;;;;;;;;;;;;AChBuB;AACiB;;;;AAM5D,MAAM,kBAAkB;IAE7B,YACU,KAAiB,EACjB,QAA2B;QAD3B,UAAK,GAAL,KAAK,CAAY;QACjB,aAAQ,GAAR,QAAQ,CAAmB;IAClC,CAAC;IAEJ,IAAW,gBAAgB;QACzB,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IACxC,CAAC;IAEY,UAAU;;YACrB,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC1C,CAAC;KAAA;IAEM,cAAc,CAAC,MAAc;QAClC,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;;oFAjBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACI;AACM;AACf;AACA;AAC4C;AACM;AAChB;AACqB;;;AAqB/F,MAAM,oBAAoB;IACxB,MAAM,CAAC,OAAO,CAAC,aAAa;QAEjC,OAAO;YACH,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACP,6FAAkB;gBAClB;oBACI,OAAO,EAAE,kHAA8B;oBACvC,QAAQ,EAAE,aAAa;iBAC1B;aACJ;SACJ,CAAC;IACN,CAAC;;wFAbY,oBAAoB;mGAApB,oBAAoB;uGAlBtB;YACP,iEAAc;YACd,4DAAY;YACZ,qEAAgB;YAChB,4DAAY,CAAC,QAAQ,CAAC;gBACpB,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,uGAAwB,EAAC;gBACtE,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,6GAA0B,EAAC;gBAClF,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;aACpD,CAAC;SACH;mIASU,oBAAoB,mBAP7B,uGAAwB;QACxB,6GAA0B,aAX1B,iEAAc;QACd,4DAAY;QACZ,qEAAgB,2EAYhB,uGAAwB;;;;;;;;;;;;;;;;;;;;;ACxBsB;AACC;AAC0D;;;AAKtG,MAAM,iBAAiB;IAG5B,YACU,KAAiB,EACuB,YAAY;QADpD,UAAK,GAAL,KAAK,CAAY;QACuB,iBAAY,GAAZ,YAAY;QAKtD,SAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,SAAS,IAAI,CAAC,YAAY,CAAC,iBAAiB,cAAc,CAAC;QACzG,sBAAiB,GAAG,IAAI,oDAAe,CAAqB,EAAE,CAAC,CAAC;QAJtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAChE,CAAC;IAKY,UAAU;;YACrB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAA2B,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;YAEvF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC;KAAA;IAEY,cAAc,CAAC,MAAc;;YACxC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAAE;gBACxC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QAC7E,CAAC;KAAA;;kFAzBU,iBAAiB,kLAKlB,6FAA8B;oGAL7B,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,iBAAiB,EAAE,kBAAkB;IACrC,gBAAgB,EAAE,2BAA2B;CAC9C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACjB2B;AAC7C;AAEiC;;;;;;ICFhF,uEAAM;IACJ,oEAAsC;IACtC,sEAAK;IAAA,uDAA6E;IAAA,4DAAM;IAC1F,4DAAO;IACP,uEAAM;IACJ,oEAAQ;IAAA,gEAAI;IACZ,uEAAqC;IAAA,gEAAK;IAAA,gEAAI;IAAA,wDAAmB;IAAA,4DAAI;IACrE,wEAAsC;IAAA,kEAAM;IAAA,iEAAI;IAAA,wDAAoB;IAAA,4DAAI;IACxE,wEAAyC;IAAA,kEAAM;IAAA,iEAAI;IAAA,wDAAoB;IAAA,4DAAI;IAC3E,wEAAM;IACJ,qEAAQ;IAAA,iEAAI;IACZ,wDAAyE;IAAA,iEAAI;IAC7E,wDACF;IAAA,4DAAO;IACT,4DAAO;;;IAbA,0DAAgC;IAAhC,6JAAgC;IAChC,0DAA6E;IAA7E,4KAA6E;IAI/E,0DAAiC;IAAjC,8JAAiC;IAAU,0DAAmB;IAAnB,uFAAmB;IAC9D,0DAAkC;IAAlC,+JAAkC;IAAW,0DAAoB;IAApB,wFAAoB;IACjE,0DAAqC;IAArC,kKAAqC;IAAW,0DAAoB;IAApB,wFAAoB;IAGrE,0DAAyE;IAAzE,gKAAyE;IACzE,0DACF;IADE,iMACF;;ADHG,MAAM,0BAA0B;IAErC,YACU,kBAAqC,EACrC,mBAAuC,EACvC,eAA+B;QAF/B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,oBAAe,GAAf,eAAe,CAAgB;IACrC,CAAC;IAMC,QAAQ;;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACzC,CAAC;KAAA;;oGAhBU,0BAA0B;0GAA1B,0BAA0B;QCXvC,wIAgBc;;QAhBD,gFAAmB;;;;;;;;;;;;;;;;;;;;;;ACCkD;;;;;;ICC9E,kFAAmC;IAAC,iEAAK;IAAA,4DAAkB;;;IAC3D,2EAAgC;IAAA,uDAAwD;IAAA,4DAAW;;;IAAnE,0DAAwD;IAAxD,2IAAwD;;;IAIxF,kFAAmC;IAAC,kEAAM;IAAA,4DAAkB;;;IAC5D,2EAAgC;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,wFAAc;;;IAI/C,kFAAmC;IAAC,kEAAM;IAAA,4DAAkB;;;IAC5D,2EAAgC;IAAC,uDAAc;IAAA,4DAAW;;;IAAzB,0DAAc;IAAd,yFAAc;;;IAGjD,4EAA+E;;;IAC/E,wEAGW;;;IADT,qGAAwC;;;ADVrC,MAAM,wBAAwB;IAEnC,YAAoB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;IAC3D,CAAC;IAED,IAAW,gBAAgB;QACzB,OAAO,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;IACnD,CAAC;IAEK,QAAQ;;YACZ,MAAM,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,CAAC;QAC9C,CAAC;KAAA;;gGAXU,wBAAwB;wGAAxB,wBAAwB;QCTrC,+EAA2C;QACzC,2EAAkC;QAChC,4IAA2D;QAC3D,8HAAmG;QACrG,qEAAe;QAEf,2EAAmC;QACjC,4IAA4D;QAC5D,8HAA0D;QAC5D,qEAAe;QAEf,2EAAmC;QACjC,4IAA4D;QAC5D,8HAA0D;QAC5D,qEAAe;QAEf,4IAA+E;QAC/E,8HAGW;QACb,4DAAY;;QArBD,4FAA+B;QAgBvB,2DAA2C;QAA3C,kJAA2C;QAErC,0DAAmC;QAAnC,mJAAmC;;;;;;;;;;;;;AClB5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["export * from './lib/address-book-lib.module';\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-monorepo-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {}\n  title = 'Address Book';\n}\n","<header class=\"flex\" [routerLink]=\"'list'\">\n  <h1>Welcome to {{ title }}!</h1>\n</header>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { Observable } from 'rxjs';\n\nimport { InjectionToken } from \"@angular/core\";\n\nexport abstract class AddressBookServiceAdapter {\n  public abstract readonly addressBookList$: Observable<unknown>;\n\n  public abstract getRecords(): Promise<void>;\n}\n\nexport const ADDRESS_BOOK_API_CONFIGURATION = new InjectionToken<AddressBookApiConfiguration>(\n  'AddressBookApiConfiguration',\n);\n\nexport interface AddressBookApiConfiguration {\n  addressBookListUrl: string;\n  randomUserApiSeed: string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AddressBookLibModule } from '@yandc/address-book-lib';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AddressBookLibModule.forRoot({\n      addressBookListUrl: environment.randomUserApiUrl,\n      randomUserApiSeed: environment.randomUserApiSeed,\n    }),\n    BrowserAnimationsModule,\n    RouterModule.forRoot([]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RandomUserAdapter } from './adapters/random-user.adapter';\nimport { RandomUserDetail } from './adapters/random-user.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressBookService  {\n\n  constructor(\n    private _http: HttpClient,\n    private _adapter: RandomUserAdapter,\n  ) {}\n\n  public get addressBookList$() {\n    return this._adapter.addressBookList$;\n  }\n\n  public async getRecords(): Promise<void> {\n    return await this._adapter.getRecords();\n  }\n\n  public getUserDetails(userId: string): Promise<RandomUserDetail> {\n    return this._adapter.getUserDetails(userId);\n  }\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AddressBookListComponent } from './address-book-list/address-book-list.component';\nimport { AddressBookDetailComponent } from './address-book-detail/address-book-detail.component';\nimport { AddressBookService } from './address-book-service/address-book.service';\nimport { ADDRESS_BOOK_API_CONFIGURATION } from './address-book-service/addresss-book.service.adapter';\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CommonModule,\n    HttpClientModule,\n    RouterModule.forChild([\n      {path: 'list', pathMatch: 'full', component: AddressBookListComponent},\n      {path: 'detail/:userId', pathMatch: 'full', component: AddressBookDetailComponent},\n      {path: '**', redirectTo: 'list', pathMatch: 'full'},\n    ]),\n  ],\n  declarations: [\n    AddressBookListComponent,\n    AddressBookDetailComponent\n  ],\n  exports: [\n    AddressBookListComponent\n  ],\n})\nexport class AddressBookLibModule {\n  public static forRoot(configuration): ModuleWithProviders<AddressBookLibModule> {\n\n    return {\n        ngModule: AddressBookLibModule,\n        providers: [\n            AddressBookService,\n            {\n                provide: ADDRESS_BOOK_API_CONFIGURATION, // you can also use InjectionToken\n                useValue: configuration\n            }\n        ]\n    };\n}\n}\n","import { RandomUserDetail, RandomUserResponseSchema } from './random-user.types';\nimport { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AddressBookServiceAdapter, ADDRESS_BOOK_API_CONFIGURATION } from '../addresss-book.service.adapter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RandomUserAdapter implements AddressBookServiceAdapter {\n  public addressBookList$: Observable<RandomUserDetail[]>;\n\n  public constructor(\n    private _http: HttpClient,\n    @Inject(ADDRESS_BOOK_API_CONFIGURATION) private _environment,\n  ) {\n    this.addressBookList$ = this._addressBookList$.asObservable();\n  }\n\n  private _url = `${this._environment.addressBookListUrl}?seed=${this._environment.randomUserApiSeed}&results=100`;\n  private _addressBookList$ = new BehaviorSubject<RandomUserDetail[]>([]);\n\n  public async getRecords() {\n    const response = await this._http.get<RandomUserResponseSchema>(this._url).toPromise();\n\n    this._addressBookList$.next(response.results);\n  }\n\n  public async getUserDetails(userId: string): Promise<RandomUserDetail> {\n    if (!this._addressBookList$.value.length) {\n      await this.getRecords();\n    }\n\n    return this._addressBookList$.value.find(user => user.id.value === userId);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  randomUserApiSeed: '069d887ebb14ea32',\n  randomUserApiUrl: 'https://randomuser.me/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RandomUserDetail } from '../address-book-service/adapters/random-user.types';\nimport { AddressBookService } from '../address-book-service/address-book.service';\n\n@Component({\n  selector: 'yandc-address-book-detail',\n  templateUrl: './address-book-detail.component.html',\n  styleUrls: ['./address-book-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddressBookDetailComponent implements OnInit {\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _AddressBookService: AddressBookService,\n    private _activatedRoute: ActivatedRoute,\n  ) { }\n\n  private _userId: string;\n\n  public userDetail: RandomUserDetail;\n\n  async ngOnInit(): Promise<void> {\n    this._userId = this._activatedRoute.snapshot.params.userId;\n    this.userDetail = await this._AddressBookService.getUserDetails(this._userId);\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","<ng-template [ngIf]=\"userDetail\">\n  <span>\n    <img [src]=\"userDetail.picture.large\">\n    <div>{{userDetail.name.title}} {{userDetail.name.first}} {{userDetail.name.first}}</div>\n  </span>\n  <span>\n    Contact:<br>\n    <a [href]=\"'tel:' + userDetail.cell\">Cell:<br>{{userDetail.cell}}</a>\n    <a [href]=\"'tel:' + userDetail.phone\">Phone:<br>{{userDetail.phone}}</a>\n    <a [href]=\"'mailto:' + userDetail.email\">Email:<br>{{userDetail.email}}</a>\n    <span>\n      Address:<br>\n      {{userDetail.location.street.number}} {{userDetail.location.street.name}}<br>\n      {{userDetail.location.state}}, {{userDetail.location.country}}, {{userDetail.location.postcode}}\n    </span>\n  </span>\n</ng-template>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { AddressBookService } from '../address-book-service/address-book.service';\n\n@Component({\n  selector: 'yandc-address-book-list',\n  templateUrl: './address-book-list.component.html',\n  styleUrls: ['./address-book-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddressBookListComponent implements OnInit {\n\n  constructor(private _AddressBookService: AddressBookService) {\n  }\n\n  public get addressBookList$() {\n    return this._AddressBookService.addressBookList$;\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this._AddressBookService.getRecords();\n  }\n\n}\n","<cdk-table [dataSource]=\"addressBookList$\">\n  <ng-container cdkColumnDef=\"name\">\n    <cdk-header-cell *cdkHeaderCellDef> Name </cdk-header-cell>\n    <cdk-cell *cdkCellDef=\"let row\">{{row.name.title}} {{row.name.first}} {{row.name.last}} </cdk-cell>\n  </ng-container>\n\n  <ng-container cdkColumnDef=\"phone\">\n    <cdk-header-cell *cdkHeaderCellDef> Phone </cdk-header-cell>\n    <cdk-cell *cdkCellDef=\"let row\"> {{row.phone}} </cdk-cell>\n  </ng-container>\n\n  <ng-container cdkColumnDef=\"email\">\n    <cdk-header-cell *cdkHeaderCellDef> Email </cdk-header-cell>\n    <cdk-cell *cdkCellDef=\"let row\"> {{row.email}} </cdk-cell>\n  </ng-container>\n\n  <cdk-header-row *cdkHeaderRowDef=\"['name', 'phone', 'email']\"></cdk-header-row>\n  <cdk-row\n    *cdkRowDef=\"let row; columns: ['name', 'phone', 'email']\"\n    [routerLink]=\"'/detail/' + row.id.value\"\n  ></cdk-row>\n</cdk-table>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}